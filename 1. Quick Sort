#include<bits/stdc++.h>

using namespace std;

int t;

int partition(int A[],int lb, int ub){

	int pivot=A[lb];

	int start=lb;

	int end =ub;

while(start<end){

	while(A[start] <= pivot){

    	start++;

	}

	while(A[end] > pivot){

    	end--;

	}

	if (start<end){

 

    	t=A[start];

    	A[start]=A[end];

    	A[end]=t;

	}

}

 

    	t=A[lb];

    	A[lb]=A[end];

    	A[end]=t;

 

	return end;

 

}

 

void quicksort(int A[], int lb ,int ub)

{

   int loc;

   if(lb<ub){

	loc=partition(A,lb,ub);

	quicksort(A, lb, loc-1);

	quicksort(A, loc+1, ub);

   }

}

int main()

{

    	int n=0,j=1000,k=0,i;

    	clock_t start,end;

    	while(k<100)

    	{

     	       n=j;

            	j=j+1000;

            	int A[n];

            	for(i=0;i<n;i++)

            	{

                    	A[i]=rand()%100000;

            	}

start=clock();

quicksort(A,0,n-1);

end=clock();

double d=end-start/CLOCKS_PER_SEC;

cout<<n<<" "<<d<<endl;

k=k+1;

    	}

 return 0;

}
