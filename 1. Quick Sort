#include <bits/stdc++.h>

using namespace std;

int b[20000000];

void merge(int a[],int lb, int mid, int ub){

 

int i=lb;

int j=mid+1;

int k=lb;

 

while(i<=mid && j<=ub){

 

	if(a[i]<=a[j]){

    	b[k]=a[i];

    	i++;

    	k++;

	}

	else {

    	b[k]=a[j];

    	j++;

    	k++;

	}

}

if(i>mid){

	while(j<=ub){

    	b[k]=a[j];

    	j++;

    	k++;

	}

}

else{

    	while(i<=mid){

    	b[k]=a[i];

    	i++;

    	k++;

	}

 

}

for(i=lb;i<=ub;i++){

    	a[i]=b[i];

	}

 

}

 

void mergesort(int a[],int lb,int ub){

	int mid;

if(lb<ub){

	mid=(lb+ub)/2;

	mergesort(a,lb,mid);

	mergesort(a,mid+1,ub);

	merge(a,lb,mid,ub);

}

}

 

int main()

{
int n=0,i;

	clock_t start,end;

	int k=0,j=1000;

	while(k<100)

	{

        	n=j;

        	j=j+1000;

        	int a[n];

        	for(i=1;i<=n;i++){

                	a[i]=rand()%100000;

        	}

        	start=clock();

        	mergesort(a,1,n);

        	end=clock();

        	double d=end-start/CLOCKS_PER_SEC;

        	cout<<n<<" "<<d<<endl;

        	k=k+1;

	}

 

	return 0;

}
