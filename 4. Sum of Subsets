#include <bits/stdc++.h>
using namespace std;
int w[10], x[10];
void sum_subset(int s, int k, int r, int d)
{
    static int b = 1; // number of subsets
    x[k] = 1;
    if (s + w[k] == d)
    {
        cout << "Subset " << b++ << endl;
        for (int i = 1; i <= k; i++)
        {
            if (x[i] == 1)
                cout << w[i] << "   ";
        }
        cout << endl;
    }
    else if (s + w[k] + w[k + 1] <= d)
    {
        sum_subset(s + w[k], k + 1, r - w[k], d);
    }
    if ((s + r - w[k] >= d) && (s + w[k + 1] <= d))

    {
        x[k] = 0;
        sum_subset(s, k + 1, r - w[k], d);
    }
}
int main()
{
    int n, i, sum = 0, d;
    cout << "Enter the number of elements" << endl;
    cin >> n;
    cout << "Enter elements in increasing order" << endl;
    for (i = 1; i <= n; i++)
    {
        cin >> w[i];
        sum = sum + w[i];
    }
    cout << "Enter subset max value" << endl;
    cin >> d;
    if (sum < d || w[i] > d)
    {
        cout << "No solution" << endl;
        exit(0);
    }
    sum_subset(0, 1, sum, d);
    return 0;
}
